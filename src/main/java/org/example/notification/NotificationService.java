package org.example.notification;

import org.example.commands.AddCommand;

import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

public class NotificationService {

    private final AddCommand addCommand;

    public NotificationService(AddCommand addCommand) {
        this.addCommand = addCommand;

        // –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        startNotificationScheduler();
    }

    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
     */
    private void sendPeriodicNotifications() {
        System.out.println("üîî –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.");
    }

    /**
     * –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
     */
    private void startNotificationScheduler() {
        ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);

        // –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
        scheduler.scheduleAtFixedRate(
                this::sendPeriodicNotifications, // –ó–∞–¥–∞—á–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
                0, // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤—ã–º –∑–∞–ø—É—Å–∫–æ–º (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
                6, // –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è–º–∏ (–≤ —á–∞—Å–∞—Ö)
                TimeUnit.HOURS // –ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
        );

        System.out.println("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.");
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
     */
    public void checkPriceUpdatesAndNotify() {
        // –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–Ω, –µ—Å–ª–∏ –æ–Ω–∞ –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ.
        System.out.println("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...");
    }
}
